version: '3.2'
networks:
  airflow:

services:
  postgres:
    image: postgres:13.1
    container_name: airflow-2.3.4-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./airflow/database/data:/var/lib/postgresql/data/pgdata
      - ./airflow/database/logs:/var/lib/postgresql/data/log
    command: >
      postgres
        -c listen_addresses=*
        -c logging_collector=on
        -c log_destination=stderr
        -c max_connections=200
    networks:
      - airflow

  redis:
    image: redis:5.0.5
    container_name: airflow-2.3.4-redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - 6379:6379
    networks:
      - airflow

  webserver:
    env_file:
      - .env
    container_name: airflow-2.3.4-webserver
    build:
      context: ./airflow
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    volumes:
      - ../:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/files:/opt/airflow/files
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      restart_policy:
        condition: on-failure
        delay: 8s
        max_attempts: 3
    depends_on:
      - postgres
      - redis
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - airflow

  flower:
    container_name: airflow-2.3.4-flower
    build:
      context: ./airflow
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 5555:5555
    depends_on:
      - redis
    deploy:
      restart_policy:
        condition: on-failure
        delay: 8s
        max_attempts: 3
    volumes:
      - ./airflow/logs:/opt/airflow/logs
    command: celery flower
    networks:
      - airflow

  scheduler:
    container_name: airflow-2.3.4-scheduler
    build:
      context: ./airflow
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ../:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/files:/opt/airflow/files
      - /var/run/docker.sock:/var/run/docker.sock
    command: scheduler
    deploy:
      restart_policy:
        condition: on-failure
        delay: 8s
        max_attempts: 3
    networks:
      - airflow

  worker:
    container_name: airflow-2.3.4-worker
    build:
      context: ./airflow
      dockerfile: Dockerfile
    ports:
      - 5678:5678
    env_file:
      - .env
    volumes:
      - ../:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/files:/opt/airflow/files
      - /var/run/docker.sock:/var/run/docker.sock
    command: celery worker
    depends_on:
      - scheduler

    deploy:
      restart_policy:
        condition: on-failure
        delay: 8s
        max_attempts: 3
    networks:
      - airflow

  initdb:
    container_name: airflow-2.3.4-initdb
    build:
      context: ./airflow
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ../:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/files:/opt/airflow/files
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: /bin/bash
    deploy:
      restart_policy:
        condition: on-failure
        delay: 8s
        max_attempts: 5
    command: -c "airflow db init"
    depends_on:
      - redis
      - postgres
    networks:
      - airflow

  clickhouse:
    build:
      context: ./clickhouse/
      dockerfile: Dockerfile
    container_name: clickhouse
    environment:
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    # volumes:
    #   - ./clickhouse/data:/var/lib/clickhouse/
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - airflow
    ports:
      - 8123:8123